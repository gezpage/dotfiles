" Tab width = 4
set shiftwidth=4                " use indents of 4 spaces
set tabstop=4                   " an indentation every four columns
set softtabstop=4               " let backspace delete indent

" Slicker quicker window navigation
nmap <silent> <C-h> :wincmd h<CR>
nmap <silent> <C-j> :wincmd j<CR>
nmap <silent> <C-k> :wincmd k<CR>
nmap <silent> <C-l> :wincmd l<CR>

nmap <C-o> :ZoomWin<CR>
nmap = 2<C-W>+
nmap - 2<C-W>-

" Window navigation with stacking horizontal splits
"map <C-J> <C-W>j<C-W>_
"map <C-K> <C-W>k<C-W>_
"map <C-L> <C-W>l<C-W>_
"map <C-H> <C-W>h<C-W>_


" Min height for each window - allows stacking when using C-k and C-j
"set winminheight=0
"
" Map gundo to ,g
map <leader>g :GundoToggle<CR>

" Tagbar
" Open Tagbar on Vim start
"autocmd vimenter * TagbarOpen
autocmd VimEnter * nested :TagbarOpen
let g:tagbar_width = 30
let g:tagbar_compact = 1
let g:tagbar_iconchars = ['â–¾', 'â–¸']

" Map  yankring show to ,y yankring search to ,,y
"map <leader>y :YRShow<CR>
"map <leader><leader>y :YRSearch<CR>

" ctrlp remap to mixed mode
map <C-t> :CtrlPMixed<CR>

" Fix yankstack mappings (ctrlp overwrites)
nmap <C-p> <Plug>yankstack_substitute_older_paste
nmap <C-n> <Plug>yankstack_substitute_newer_paste
map <leader>y :Yanks<CR>

" Gitv
nmap <leader>gv :Gitv --all<cr>
nmap <leader>gV :Gitv! --all<cr>
vmap <leader>gV :Gitv! --all<cr>

" MySQLRun
"map <leader>my :MySQLRun<CR>

" VimCalc
"map <leader>cl :Calc<CR>

" ReTab and StripWhiteSpaces
map <leader>rr :retab<CR> :StripWhiteSpaces<CR>

" New Tab ,ot
map <leader>ot :tabe<CR>

" Close Tab ,ct
map <leader>ct :tabclose<CR>

" Fix ack-grep link
let g:ackprg="ack-grep -H --nocolor --nogroup --column"

" Use tab to cycle tabs
map <Tab> gt
map <S-Tab> gT

" Symfony
map <leader>s :execute ":!"g:symfony_enable_shell_cmd<CR>

" Set paste toggle
set pastetoggle=<leader>p

" visual shifting (does not exit Visual mode)
vnoremap < <gv
vnoremap > >gv

" Stupid shift key fixes
cmap W w
cmap WQ wq
cmap wQ wq
cmap Q q
cmap Tabe tabe

" Minimum lines to keep above and below cursor
set scrolloff=3

" Colorscheme stuff
set background=dark
let g:solarized_termtrans=1
let g:solarized_termcolors=256
let g:solarized_contrast="high"
let g:solarized_visibility="high"

colorscheme solarized
"colorscheme desert256
"colorscheme transparent

" NERDTree
let NERDTreeShowBookmarks=1
let NERDTreeIgnore=['\.pyc', '\~$', '\.swo$', '\.swp$', '\.git', '\.hg', '\.svn', '\.bzr']
let NERDTreeChDirMode=0
let NERDTreeQuitOnOpen=0
let nerdtreeshowhidden=1
let nerdtreekeeptreeinnewtab=1
let NERDTreeMinimalUI=1
" Map nerdtree to ctrl+e
" map <C-e> :NERDTreeToggle<CR>:NERDTreeMirror<CR>
" Map nerdtreefind to ,e
map <leader>e :NERDTreeFind<CR>
" Quit Vim if nerdtree is last window open
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
" Open nerdtree on Vim start if no file specified
"autocmd vimenter * if !argc() | NERDTree | endif
" Open nerdtree on Vim start
autocmd vimenter * NERDTree

" HTML Autoclosetag
au FileType xhtml,xml,smarty so ~/.vim/bundle/HTML-AutoCloseTag/ftplugin/html_autoclosetag.vim

" Gui font, profont
if has("gui_running")
    if has("macunix")
        set guifont=ProFont:h9
    elseif has("win32")
        set guifont=ProFontWindows:h11:b:cANSI,Lucida_Console:h11:b:cANSI
    elseif has("x11")
        set guifont=-jmk-neep-bold-r-normal--15-*-*-*-*-*-*-*
    endif
endif

" Show horizontal cursor
set cursorline

" Fix home and end keybindings for screen, particularly on mac
" - for some reason this fixes the arrow keys too. huh.
map [F $
imap [F $
map [H g0
imap [H g0

" Prevent gundo from stealing F5 (remap DBGp)
map <F5> :python debugger_run()<cr>

" Enable neocomplcache
let g:neocomplcache_enable_at_startup = 1

" always switch to the current file directory.
autocmd BufEnter * if bufname("") !~ "^\[A-Za-z0-9\]*://" | lcd %:p:h | endif

" Speeddating
nmap  <C-M>     <Plug>SpeedDatingUp
nmap  <C-X>     <Plug>SpeedDatingDown
xmap  <C-M>     <Plug>SpeedDatingUp
xmap  <C-X>     <Plug>SpeedDatingDown

let g:tagbar_phpctags_bin='/home/gez/bin/phpctags'

" Navigate back from tags jump
nmap <C-[> :pop<CR>

" Do not make tabs show as red
highlight RedundantWhitespace ctermbg=234 guibg=234
match RedundantWhitespace /\s\+$\|\t/

" Bufstop
map <C-b> :BufstopFast<CR>             " get a visual on the buffers
map <leader>b :Bufstop<CR>             " get a visual on the buffers
"map <leader>a :BufstopModeFast<CR>     " a command for quick switching
let g:BufstopAutoSpeedToggle = 1       " now I can press ,3,3,3 to cycle the last 3 buffers

" Disable PHP CodeSniffer
let g:syntastic_phpcs_disable = 1

" Vimpanel
map <leader>ss :VimpanelSessionMake<CR>
map <leader>sl :VimpanelSessionLoad<CR>
cabbrev vp Vimpanel
cabbrev vl VimpanelLoad
cabbrev vc VimpanelCreate
cabbrev ve VimpanelEdit
cabbrev vr VimpanelRemove

" Tagbar
let g:tagbar_type_markdown = {
    \ 'ctagstype' : 'markdown',
    \ 'kinds' : [
        \ 'h:Heading_L1',
        \ 'i:Heading_L2',
        \ 'k:Heading_L3'
    \ ]
\ }
